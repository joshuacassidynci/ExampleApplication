version: 2.1

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
      - deploy:
          filters:
            branches:
              only:
                - main
          requires:
            - build

jobs:
  build:
    working_directory: ~/example_application
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@5'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: audit-packages
          command: npm audit
      - run:
          name: test-run
          command: npm run test
      - run:
          name: docker-login
          command: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - run:
          name: Build Docker Image
          command: docker build -t $IMAGE_NAME:latest .
      - run:
          name: Publish Docker Image
          command: docker push $IMAGE_NAME
      - run:
          name: Set Environment Variables
          command: echo $SERVER > server.crt && echo $PRIVATE_KEY > privatekey.pem
      - run:
          name: Build Docker Image
          command: docker build -t integration_app .
      - run:
          name: Specify DEV env
          command: export default ENV=DEV;
      - run:
          name: Run Docker Image
          command: docker run -p 8443:8443 -d integration_app
      - run:
          name: Get ZAP Image
          command: docker pull owasp/zap2docker-weekly
      - run:
          name: Scan Application with ZAP
          command: docker run -t owasp/zap2docker-weekly zap-baseline.py -t docker run -t owasp/zap2docker-weekly zap-baseline.py -t "http://$(ip -f inet -o addr show docker0 | awk '{print $4}' | cut -d '/' -f 1):8443/math/add"
  deploy:
    docker:
      - image: circleci/node:10.16.3
    steps:
      - run:
          name: deploy-application
          command: ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS "export SERVER=\"$SERVER\"; export CONTAINER_NAME=\"$CONTAINER_NAME\"; export IMAGE_NAME=\"$IMAGE_NAME\"; export PRIVATE_KEY=\"$PRIVATE_KEY\"; rm -rf ExampleApplication/; git clone https://github.com/joshuacassidynci/ExampleApplication.git; source ExampleApplication/deploy.sh"
